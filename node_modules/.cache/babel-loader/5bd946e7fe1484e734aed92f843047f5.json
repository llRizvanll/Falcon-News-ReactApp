{"ast":null,"code":"import _classCallCheck from \"/Users/jrizvan/falcon/react-native-projects/react-newspaper/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jrizvan/falcon/react-native-projects/react-newspaper/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jrizvan/falcon/react-native-projects/react-newspaper/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jrizvan/falcon/react-native-projects/react-newspaper/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jrizvan/falcon/react-native-projects/react-newspaper/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jrizvan/falcon/react-native-projects/react-newspaper/src/headlines.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport \"tabler-react/dist/Tabler.css\";\nimport C3Chart from \"react-c3js\";\nimport { Card, Nav, Grid, BlogCard } from \"tabler-react\";\n\nvar Headlines =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Headlines, _React$Component);\n\n  function Headlines(props) {\n    var _this;\n\n    _classCallCheck(this, Headlines);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Headlines).call(this, props));\n    _this.state = {\n      headlinesNews: [],\n      isLoading: true,\n      errors: null\n    };\n    return _this;\n  }\n\n  _createClass(Headlines, [{\n    key: \"getUsers\",\n    value: function getUsers(catags) {\n      var _this2 = this;\n\n      // We're using axios instead of Fetch\n      // axios.get('https://newsapi.org/v2/top-headlines',{\n      //     params: {country: catags, apiKey: '49ec45d262b4417b942ac9c9b5324cd5'}\n      // })\n      axios.get('https://api.jsonbin.io/b/5f5764924d8ce411138b3d73', {\n        headers: {\n          'secret-key': '$2b$10$iDDpCRnCdMAcLpjqoygl2OKRLuvFjB1kP4JcQx3J6pKuZofzsCM/e'\n        }\n      }) //https://api.jsonbin.io/b/5f5764924d8ce411138b3d73\n      // Once we get a response, we'll map the API endpoints to our props\n      .then(function (response) {\n        return response.data.articles.map(function (news) {\n          return {\n            title: \"\".concat(news.title),\n            description: \"\".concat(news.description),\n            author: \"\".concat(news.author),\n            newsurl: \"\".concat(news.url),\n            url: \"\".concat(news.urlToImage),\n            content: \"\".concat(news.content)\n          };\n        });\n      }) // Let's make sure to change the loading state to display the data\n      .then(function (headlinesNews) {\n        _this2.setState({\n          headlinesNews: headlinesNews,\n          isLoading: false\n        });\n      }) // We can still use the `.catch()` method since axios is promise-based\n      .catch(function (error) {\n        return _this2.setState({\n          error: error,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUsers('us');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          headlinesNews = _this$state.headlinesNews;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        cards: true,\n        deck: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, !isLoading ? headlinesNews.map(function (news) {\n        var title = news.title,\n            description = news.description,\n            author = news.author,\n            newsurl = news.newsurl,\n            url = news.url,\n            content = news.content;\n        return React.createElement(Grid.Col, {\n          md: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(BlogCard, {\n          title: title,\n          imgSrc: url,\n          avatarImgSrc: \"https://tabler.github.io/tabler/demo/faces/female/18.jpg\",\n          authorName: author,\n          description: content,\n          postUrl: newsurl,\n          iconHref: newsurl,\n          url: newsurl,\n          profileHref: newsurl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }));\n      }) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Loading...\")));\n    }\n  }]);\n\n  return Headlines;\n}(React.Component);\n\nexport default Headlines;","map":{"version":3,"sources":["/Users/jrizvan/falcon/react-native-projects/react-newspaper/src/headlines.js"],"names":["React","axios","C3Chart","Card","Nav","Grid","BlogCard","Headlines","props","state","headlinesNews","isLoading","errors","catags","get","headers","then","response","data","articles","map","news","title","description","author","newsurl","url","urlToImage","content","setState","catch","error","getUsers","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport \"tabler-react/dist/Tabler.css\";\nimport C3Chart from \"react-c3js\";\nimport {Card,Nav, Grid, BlogCard} from \"tabler-react\";\n\nclass Headlines extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            headlinesNews: [],\n            isLoading: true,\n            errors: null\n        };\n    }\n\n    getUsers(catags) {\n        // We're using axios instead of Fetch\n        // axios.get('https://newsapi.org/v2/top-headlines',{\n        //     params: {country: catags, apiKey: '49ec45d262b4417b942ac9c9b5324cd5'}\n        // })\n        axios.get('https://api.jsonbin.io/b/5f5764924d8ce411138b3d73',{\n            headers:{'secret-key':'$2b$10$iDDpCRnCdMAcLpjqoygl2OKRLuvFjB1kP4JcQx3J6pKuZofzsCM/e'}\n        })\n        //https://api.jsonbin.io/b/5f5764924d8ce411138b3d73\n          // Once we get a response, we'll map the API endpoints to our props\n          .then(response =>\n            response.data.articles.map(news => ({\n              title: `${news.title}`,\n              description: `${news.description}`,\n              author: `${news.author}`,\n              newsurl: `${news.url}`,\n              url: `${news.urlToImage}`,\n              content: `${news.content}`\n            }))\n          )\n          // Let's make sure to change the loading state to display the data\n          .then(headlinesNews => {\n            this.setState({\n              headlinesNews,\n              isLoading: false\n            });\n          })\n          // We can still use the `.catch()` method since axios is promise-based\n          .catch(error => this.setState({ error, isLoading: false }));\n    }\n\n    componentDidMount() {\n        this.getUsers('us')\n    }\n\n    render(){\n        const { isLoading, headlinesNews } = this.state;\n        return (\n            <React.Fragment>\n                <Grid.Row cards deck>\n                  {!isLoading ? (\n                  headlinesNews.map(news => {\n                      const { title, description, author, newsurl, url, content } = news;\n                      return ( \n                              <Grid.Col md={4}>  \n                                <BlogCard \n                                title={title}\n                                imgSrc={url}\n                                avatarImgSrc=\"https://tabler.github.io/tabler/demo/faces/female/18.jpg\"\n                                authorName={author}\n                                description={content}\n                                postUrl={newsurl}\n                                iconHref={newsurl}\n                                url={newsurl}\n                                profileHref={newsurl}\n                                >\n                                      {/* {\n                                          <div >\n                                            <div style={{margin:\"10px\"}}>\n                                                <span >\n                                                    <h2>{title}</h2>\n                                                </span>\n                                                <p>\n                                                    <span className=\"\">\n                                                        {author}\n                                                    </span>\n                                                </p>\n                                                \n                                                  <div style={{margin:\"20px\"}}>\n                                                  <Card body={\n                                                    <img src={url} alt=\"\" />\n                                                  }>\n                                                    </Card>\n                                                  </div>\n                                                \n                                                  <div style={{height:\"100px\"}}>\n                                                    <p>\n                                                      {description}<br />\n                                                      {content}\n                                                    </p>\n                                                    <a href={newsurl} target=\"_blank\" rel=\"noopener noreferrer\">Read full news</a>\n                                                  </div>\n                                                  \n                                              </div>\n                                        </div>\n                                    } */}\n                                </BlogCard>  \n                              </Grid.Col>\n                                \n                                \n                      );\n                  })\n                  \n                  ) : (\n                  <p>Loading...</p>\n                  )}\n                  </Grid.Row>\n              \n              </React.Fragment>\n              \n            \n        );\n    }\n}\n\nexport default Headlines;\n\n\n"]},"metadata":{},"sourceType":"module"}