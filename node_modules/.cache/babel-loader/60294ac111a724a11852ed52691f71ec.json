{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getIndexForItemHeightCalculation = exports.calculateSlidesOffset = exports.recalculateTranslatePosition = exports.recalculateCurrentSlideIndex = exports.isTheLastDotIndex = exports.getItemIndexForDotNavigation = exports.getDotsNavigationLength = exports.getMaxSwipeLimitIfNotInfinite = exports.shouldRecalculateSwipePosition = exports.getMinSwipeLimitIfNotInfinite = exports.getSlideOffset = exports.getMaxSwipeLimit = exports.getMinSwipeLimit = exports.getMinSwipePosition = exports.getMaxSwipePosition = exports.recalculateCurrentIndexOnBeforeTouchEnd = exports.recalculatePositionOnBeforeTouchEnd = exports.getFadeOutOffsetOnClick = exports.getFadeOutIndexOnClick = exports.getFadeOutOffsetOnDotClick = exports.setStartIndex = exports.getSlideIndexForMultipleItems = exports.getSlideIndexForNotMultipleItems = exports.getActiveSlideIndex = exports.getDotsLength = void 0;\n\nvar Utils = _interopRequireWildcard(require(\"./index\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar getDotsLength = function getDotsLength(slidesLength, items) {\n  if (slidesLength && items) {\n    var dots = Math.floor(slidesLength / items);\n    return slidesLength % items === 0 ? dots - 1 : dots;\n  }\n\n  return 0;\n};\n\nexports.getDotsLength = getDotsLength;\n\nvar getActiveSlideIndex = function getActiveSlideIndex(isNextSlideDisabled) {\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var index = props.currentIndex,\n      items = props.items,\n      _props$slides = props.slides,\n      slides = _props$slides === void 0 ? [] : _props$slides;\n  var currentIndex = index + items;\n  var slidesLength = slides.length;\n  return items === 1 ? getSlideIndexForNotMultipleItems(currentIndex, items, slidesLength) : getSlideIndexForMultipleItems(currentIndex, items, slidesLength, isNextSlideDisabled);\n};\n\nexports.getActiveSlideIndex = getActiveSlideIndex;\n\nvar getSlideIndexForNotMultipleItems = function getSlideIndexForNotMultipleItems(currentIndex, items, slidesLength) {\n  if (currentIndex < items) return slidesLength - items;\n  if (currentIndex > slidesLength) return 0;\n  return currentIndex - 1;\n};\n\nexports.getSlideIndexForNotMultipleItems = getSlideIndexForNotMultipleItems;\n\nvar getSlideIndexForMultipleItems = function getSlideIndexForMultipleItems(currentIndex, items, slidesLength, isNextSlideDisabled) {\n  var dotsLength = getDotsLength(slidesLength, items);\n  if (currentIndex === slidesLength + items) return 0;\n  if (isNextSlideDisabled || currentIndex < items && currentIndex !== 0) return dotsLength;\n\n  if (currentIndex === 0) {\n    return slidesLength % items === 0 ? dotsLength : dotsLength - 1;\n  }\n\n  return items > 0 ? Math.floor(currentIndex / items) - 1 : 0;\n};\n\nexports.getSlideIndexForMultipleItems = getSlideIndexForMultipleItems;\n\nvar setStartIndex = function setStartIndex(childrenLength, index) {\n  var startIndex = index ? Math.abs(Math.ceil(index)) : 0;\n  return Math.min(startIndex, childrenLength - 1) || 0;\n};\n\nexports.setStartIndex = setStartIndex;\n\nvar getFadeOutOffsetOnDotClick = function getFadeOutOffsetOnDotClick(itemIndex, currentIndex, itemWidth) {\n  if (itemIndex < currentIndex) {\n    return (currentIndex - itemIndex) * -itemWidth || 0;\n  } else {\n    return (itemIndex - currentIndex) * itemWidth || 0;\n  }\n};\n\nexports.getFadeOutOffsetOnDotClick = getFadeOutOffsetOnDotClick;\n\nvar getFadeOutIndexOnClick = function getFadeOutIndexOnClick(currentIndex) {\n  return currentIndex === 0 ? 1 : currentIndex + 1;\n};\n\nexports.getFadeOutIndexOnClick = getFadeOutIndexOnClick;\n\nvar getFadeOutOffsetOnClick = function getFadeOutOffsetOnClick(direction, itemWidth) {\n  return direction === 'next' ? itemWidth : -itemWidth;\n};\n\nexports.getFadeOutOffsetOnClick = getFadeOutOffsetOnClick;\n\nvar recalculatePositionOnBeforeTouchEnd = function recalculatePositionOnBeforeTouchEnd(items, itemWidth) {\n  return -getMinSwipePosition(items, itemWidth);\n};\n\nexports.recalculatePositionOnBeforeTouchEnd = recalculatePositionOnBeforeTouchEnd;\n\nvar recalculateCurrentIndexOnBeforeTouchEnd = function recalculateCurrentIndexOnBeforeTouchEnd(slidesLength, items) {\n  return slidesLength - items || 0;\n};\n\nexports.recalculateCurrentIndexOnBeforeTouchEnd = recalculateCurrentIndexOnBeforeTouchEnd;\n\nvar getMaxSwipePosition = function getMaxSwipePosition(items, itemWidth, slidesLength) {\n  return (slidesLength + items) * itemWidth || 0;\n};\n\nexports.getMaxSwipePosition = getMaxSwipePosition;\n\nvar getMinSwipePosition = function getMinSwipePosition(items, itemWidth) {\n  return items * itemWidth || 0;\n};\n\nexports.getMinSwipePosition = getMinSwipePosition;\n\nvar getMinSwipeLimit = function getMinSwipeLimit() {\n  var minSwipePosition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var stagePadding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _stagePadding$padding = stagePadding.paddingLeft,\n      paddingLeft = _stagePadding$padding === void 0 ? 0 : _stagePadding$padding;\n  return paddingLeft ? minSwipePosition : 0;\n};\n\nexports.getMinSwipeLimit = getMinSwipeLimit;\n\nvar getMaxSwipeLimit = function getMaxSwipeLimit() {\n  var maxSwipePosition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var stagePadding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var itemWidth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var _stagePadding$padding2 = stagePadding.paddingRight,\n      paddingRight = _stagePadding$padding2 === void 0 ? 0 : _stagePadding$padding2;\n  return paddingRight ? maxSwipePosition + itemWidth : maxSwipePosition;\n};\n\nexports.getMaxSwipeLimit = getMaxSwipeLimit;\n\nvar getSlideOffset = function getSlideOffset(itemWidth) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 250;\n  return Math.min(itemWidth / 2, offset) || 0;\n};\n\nexports.getSlideOffset = getSlideOffset;\n\nvar getMinSwipeLimitIfNotInfinite = function getMinSwipeLimitIfNotInfinite(items, itemWidth) {\n  return items * itemWidth - getSlideOffset(itemWidth) || 0;\n};\n\nexports.getMinSwipeLimitIfNotInfinite = getMinSwipeLimitIfNotInfinite;\n\nvar shouldRecalculateSwipePosition = function shouldRecalculateSwipePosition(currentPosition, minPosition, maxPosition) {\n  return currentPosition >= 0 - minPosition || Math.abs(currentPosition) >= maxPosition;\n};\n\nexports.shouldRecalculateSwipePosition = shouldRecalculateSwipePosition;\n\nvar getMaxSwipeLimitIfNotInfinite = function getMaxSwipeLimitIfNotInfinite(slidesLength, itemWidth) {\n  return slidesLength * itemWidth + getSlideOffset(itemWidth) || 0;\n};\n\nexports.getMaxSwipeLimitIfNotInfinite = getMaxSwipeLimitIfNotInfinite;\n\nvar getDotsNavigationLength = function getDotsNavigationLength(slidesLength, items) {\n  if (Number(items) !== 0) {\n    return Math.ceil(slidesLength / items) || 0;\n  }\n\n  return 0;\n};\n\nexports.getDotsNavigationLength = getDotsNavigationLength;\n\nvar getItemIndexForDotNavigation = function getItemIndexForDotNavigation(index, isTheLastIndex, slidesLength, itemsLength) {\n  var result = isTheLastIndex ? slidesLength - itemsLength : index * itemsLength;\n  return result || 0;\n};\n\nexports.getItemIndexForDotNavigation = getItemIndexForDotNavigation;\n\nvar isTheLastDotIndex = function isTheLastDotIndex(index, infinite, dotsLength) {\n  return infinite === false && index === dotsLength - 1;\n};\n\nexports.isTheLastDotIndex = isTheLastDotIndex;\n\nvar recalculateCurrentSlideIndex = function recalculateCurrentSlideIndex() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var currentIndex = state.currentIndex,\n      _state$slides = state.slides,\n      slides = _state$slides === void 0 ? [] : _state$slides;\n  return currentIndex < 0 ? slides.length - 1 : 0;\n};\n\nexports.recalculateCurrentSlideIndex = recalculateCurrentSlideIndex;\n\nvar recalculateTranslatePosition = function recalculateTranslatePosition() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var items = state.items,\n      itemWidth = state.itemWidth,\n      _state$stagePadding = state.stagePadding,\n      stagePadding = _state$stagePadding === void 0 ? {} : _state$stagePadding,\n      _state$slides2 = state.slides,\n      slides = _state$slides2 === void 0 ? [] : _state$slides2;\n  var maxSlidePosition = slides.length - 1;\n  var currentIndex = state.currentIndex < 0 ? maxSlidePosition : 0;\n  var nextIndex = currentIndex === 0 ? items : maxSlidePosition + items;\n\n  if (stagePadding.paddingLeft || stagePadding.paddingRight) {\n    return (nextIndex + 1) * -itemWidth || 0;\n  }\n\n  return nextIndex * -itemWidth || 0;\n};\n\nexports.recalculateTranslatePosition = recalculateTranslatePosition;\n\nvar calculateSlidesOffset = function calculateSlidesOffset(props, state) {\n  var items = state.items,\n      infinite = state.infinite;\n  var offset = infinite && Utils.isStagePadding(props) ? 1 : 0;\n  return items + offset;\n};\n\nexports.calculateSlidesOffset = calculateSlidesOffset;\n\nvar getIndexForItemHeightCalculation = function getIndexForItemHeightCalculation(currentIndex, slidesOffset) {\n  return currentIndex + slidesOffset;\n};\n\nexports.getIndexForItemHeightCalculation = getIndexForItemHeightCalculation;","map":null,"metadata":{},"sourceType":"script"}