{"ast":null,"code":"import _classCallCheck from \"/Users/jrizvan/falcon/react-native-projects/react-newspaper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jrizvan/falcon/react-native-projects/react-newspaper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jrizvan/falcon/react-native-projects/react-newspaper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jrizvan/falcon/react-native-projects/react-newspaper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jrizvan/falcon/react-native-projects/react-newspaper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jrizvan/falcon/react-native-projects/react-newspaper/src/headlines.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nvar Headlines =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Headlines, _React$Component);\n\n  function Headlines(props) {\n    var _this;\n\n    _classCallCheck(this, Headlines);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Headlines).call(this, props));\n    _this.state = {\n      headlinesNews: [],\n      isLoading: true,\n      errors: null\n    };\n    return _this;\n  }\n\n  _createClass(Headlines, [{\n    key: \"getUsers\",\n    value: function getUsers(catags) {\n      var _this2 = this;\n\n      // We're using axios instead of Fetch\n      axios.get('https://newsapi.org/v2/top-headlines', {\n        params: {\n          country: catags,\n          apiKey: 'b1f8f098191a4ab5ae0581b74565cbf3'\n        }\n      }) // Once we get a response, we'll map the API endpoints to our props\n      .then(function (response) {\n        return response.data.articles.map(function (news) {\n          return {\n            title: \"\".concat(news.title),\n            description: \"\".concat(news.description),\n            author: \"\".concat(news.author),\n            newsurl: \"\".concat(news.url),\n            url: \"\".concat(news.urlToImage),\n            content: \"\".concat(news.content)\n          };\n        });\n      }) // Let's make sure to change the loading state to display the data\n      .then(function (headlinesNews) {\n        _this2.setState({\n          headlinesNews: headlinesNews,\n          isLoading: false\n        });\n      }) // We can still use the `.catch()` method since axios is promise-based\n      .catch(function (error) {\n        return _this2.setState({\n          error: error,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUsers('us');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          headlinesNews = _this$state.headlinesNews;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"subhead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Headlines\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, !isLoading ? headlinesNews.map(function (news) {\n        var title = news.title,\n            description = news.description,\n            author = news.author,\n            newsurl = news.newsurl,\n            url = news.url,\n            content = news.content;\n        return React.createElement(\"div\", {\n          className: \"collumn\",\n          key: title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"head\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"headline hl3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, title), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"headline hl4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, author)), React.createElement(\"figure\", {\n          className: \"figure\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"media\",\n          src: url,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, description, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }), content), React.createElement(\"a\", {\n          href: newsurl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Read full news\")));\n      }) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Loading...\")));\n    }\n  }]);\n\n  return Headlines;\n}(React.Component);\n\nexport default Headlines;","map":{"version":3,"sources":["/Users/jrizvan/falcon/react-native-projects/react-newspaper/src/headlines.js"],"names":["React","axios","Headlines","props","state","headlinesNews","isLoading","errors","catags","get","params","country","apiKey","then","response","data","articles","map","news","title","description","author","newsurl","url","urlToImage","content","setState","catch","error","getUsers","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass Headlines extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            headlinesNews: [],\n            isLoading: true,\n            errors: null\n        };\n    }\n\n    getUsers(catags) {\n        // We're using axios instead of Fetch\n        axios.get('https://newsapi.org/v2/top-headlines',{\n            params: {country: catags, apiKey: 'b1f8f098191a4ab5ae0581b74565cbf3'}\n        })\n          // Once we get a response, we'll map the API endpoints to our props\n          .then(response =>\n            response.data.articles.map(news => ({\n              title: `${news.title}`,\n              description: `${news.description}`,\n              author: `${news.author}`,\n              newsurl: `${news.url}`,\n              url: `${news.urlToImage}`,\n              content: `${news.content}`\n            }))\n          )\n          // Let's make sure to change the loading state to display the data\n          .then(headlinesNews => {\n            this.setState({\n              headlinesNews,\n              isLoading: false\n            });\n          })\n          // We can still use the `.catch()` method since axios is promise-based\n          .catch(error => this.setState({ error, isLoading: false }));\n    }\n\n    componentDidMount() {\n        this.getUsers('us')\n    }\n\n    render(){\n        const { isLoading, headlinesNews } = this.state;\n        return (\n            <React.Fragment>\n            <div className=\"subhead\"><h2>Headlines</h2></div>\n            <div>\n                {!isLoading ? (\n                headlinesNews.map(news => {\n                    const { title, description, author, newsurl, url, content } = news;\n                    return (\n                    <div className=\"collumn\" key={title}>\n                        <div className=\"head\">\n                            <span className=\"headline hl3\">\n                                {title}\n                            </span>\n                            <p>\n                                <span className=\"headline hl4\">\n                                    {author}\n                                </span>\n                            </p>\n                            <figure className=\"figure\">\n\t\t\t\t\t\t\t\t<img className=\"media\" src={url} alt=\"\" />\n\t\t\t\t\t\t    </figure>\n                            <p>\n                                {description}<br />\n                                {content}\n                            </p>\n                            <a href={newsurl} target=\"_blank\" rel=\"noopener noreferrer\">Read full news</a>\n                        </div>\n                    </div>\n                    );\n                })\n                ) : (\n                <p>Loading...</p>\n                )}\n            </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Headlines;"]},"metadata":{},"sourceType":"module"}