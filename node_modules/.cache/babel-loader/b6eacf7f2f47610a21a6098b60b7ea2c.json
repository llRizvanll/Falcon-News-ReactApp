{"ast":null,"code":"import _classCallCheck from \"/Users/jrizvan/falcon/react-native-projects/react-newspaper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jrizvan/falcon/react-native-projects/react-newspaper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jrizvan/falcon/react-native-projects/react-newspaper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jrizvan/falcon/react-native-projects/react-newspaper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jrizvan/falcon/react-native-projects/react-newspaper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jrizvan/falcon/react-native-projects/react-newspaper/src/categories.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport \"tabler-react/dist/Tabler.css\";\nimport C3Chart from \"react-c3js\";\nimport { Card, Nav, Grid } from \"tabler-react\";\n\nvar Categories =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Categories, _React$Component);\n\n  function Categories() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Categories);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Categories)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      headlinesNews: [],\n      isLoading: true,\n      errors: null,\n      urlParams: _this.props.match.params\n    };\n    return _this;\n  }\n\n  _createClass(Categories, [{\n    key: \"getUsers\",\n    value: function getUsers(catName) {\n      var _this2 = this;\n\n      // I have used axios instead of Fetch\n      axios.get('https://newsapi.org/v2/everything', {\n        params: {\n          q: catName,\n          apiKey: 'b1f8f098191a4ab5ae0581b74565cbf3'\n        }\n      }) // mapping the API endpoints to props\n      .then(function (response) {\n        return response.data.articles.map(function (news) {\n          return {\n            title: \"\".concat(news.title),\n            description: \"\".concat(news.description),\n            author: \"\".concat(news.author),\n            newsurl: \"\".concat(news.url),\n            url: \"\".concat(news.urlToImage),\n            content: \"\".concat(news.content)\n          };\n        });\n      }) // Updating loading state\n      .then(function (headlinesNews) {\n        _this2.setState({\n          headlinesNews: headlinesNews,\n          isLoading: false\n        });\n      }) // using the `.catch()` method since axios is promise-based\n      .catch(function (error) {\n        return _this2.setState({\n          error: error,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.match.params !== this.props.match.params) {\n        var currentName = nextProps.match.params;\n        this.getUsers(currentName);\n        this.setState({\n          urlParams: currentName\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var name = this.props.match.params.name;\n      this.getUsers(name);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          headlinesNews = _this$state.headlinesNews;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"subhead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.state.urlParams.name)), React.createElement(\"div\", {\n        className: \"news_content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        cards: true,\n        deck: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, !isLoading ? headlinesNews.map(function (news) {\n        var title = news.title,\n            description = news.description,\n            author = news.author,\n            newsurl = news.newsurl,\n            url = news.url,\n            content = news.content;\n        return React.createElement(\"div\", {\n          style: {\n            width: \"200px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(Grid.Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(Card, {\n          body: React.createElement(\"div\", {\n            className: \"column\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"head\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"headline hl3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, title), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"headline hl4\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, author)), React.createElement(\"figure\", {\n            className: \"figure\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            className: \"media\",\n            src: url,\n            alt: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          })), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, description, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }), content), React.createElement(\"a\", {\n            href: newsurl,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, \"Read full news\"))),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        })));\n      }) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Loading...\"))));\n    }\n  }]);\n\n  return Categories;\n}(React.Component);\n\nexport default Categories;","map":{"version":3,"sources":["/Users/jrizvan/falcon/react-native-projects/react-newspaper/src/categories.js"],"names":["React","axios","C3Chart","Card","Nav","Grid","Categories","state","headlinesNews","isLoading","errors","urlParams","props","match","params","catName","get","q","apiKey","then","response","data","articles","map","news","title","description","author","newsurl","url","urlToImage","content","setState","catch","error","nextProps","currentName","getUsers","name","width","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport \"tabler-react/dist/Tabler.css\";\nimport C3Chart from \"react-c3js\";\nimport {Card,Nav, Grid} from \"tabler-react\";\n\nclass Categories extends React.Component{\n    state = {\n        headlinesNews: [],\n        isLoading: true,\n        errors: null,\n        urlParams: this.props.match.params\n    };\n\n    getUsers(catName) {\n        // I have used axios instead of Fetch\n        axios.get('https://newsapi.org/v2/everything',{\n            params: {q: catName, apiKey: 'b1f8f098191a4ab5ae0581b74565cbf3'}\n        })\n          // mapping the API endpoints to props\n          .then(response =>\n            response.data.articles.map(news => ({\n              title: `${news.title}`,\n              description: `${news.description}`,\n              author: `${news.author}`,\n              newsurl: `${news.url}`,\n              url: `${news.urlToImage}`,\n              content: `${news.content}`\n            }))\n          )\n          // Updating loading state\n          .then(headlinesNews => {\n            this.setState({\n              headlinesNews,\n              isLoading: false\n            });\n          })\n          // using the `.catch()` method since axios is promise-based\n          .catch(error => this.setState({ error, isLoading: false }));\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.match.params !== this.props.match.params) {\n          const currentName = nextProps.match.params\n          this.getUsers(currentName);\n          this.setState({\n            urlParams: currentName\n          })\n        }\n      }\n\n    componentDidMount() {\n        const { name } = this.props.match.params;\n        this.getUsers(name);\n    }\n\n    render(){\n        const { isLoading, headlinesNews } = this.state;\n        return (\n            \n              \n              <React.Fragment>\n              <div className=\"subhead\"><h2>{this.state.urlParams.name}</h2></div>\n              <div className=\"news_content\">\n              <Grid.Row cards deck>\n                  {!isLoading ? (\n                  headlinesNews.map(news => {\n                      const { title, description, author, newsurl, url, content } = news;\n                      return (\n                        \n                              <div style={{width:\"200px\"}}> \n                              <Grid.Col>\n                                <Card\n                              body={\n                                <div className=\"column\">\n                                  <div className=\"head\">\n                                      <span className=\"headline hl3\">\n                                          {title}\n                                      </span>\n                                      <p>\n                                          <span className=\"headline hl4\">\n                                              {author}\n                                          </span>\n                                      </p>\n                                      <figure className=\"figure\">\n                                        <img className=\"media\" src={url} alt=\"\" />\n                                      </figure>\n                                        <p>\n                                          {description}<br />\n                                          {content}\n                                        </p>\n                                        <a href={newsurl} target=\"_blank\" rel=\"noopener noreferrer\">Read full news</a>\n                                    </div>\n                              </div>\n                              }>\n                              \n                              </Card>\n                              </Grid.Col>\n                                </div>\n                                \n                      );\n                  })\n                  \n                  ) : (\n                  <p>Loading...</p>\n                  )}\n                  </Grid.Row>\n              </div>\n              </React.Fragment>\n              \n            \n              \n            \n        );\n    }\n}\n\nexport default Categories;"]},"metadata":{},"sourceType":"module"}